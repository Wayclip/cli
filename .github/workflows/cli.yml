name: Wayclip Release Pipeline

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      pkg_ver: ${{ env.PKG_VER }}
    steps:
      - name: Set Environment from Trigger
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            CLI_VERSION_TAG="${{ github.ref_name }}"
          else
            CLI_VERSION_TAG=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r '.tag_name')
            if [[ -z "$CLI_VERSION_TAG" || "$CLI_VERSION_TAG" == "null" ]]; then
              echo "::error::Could not determine the latest CLI release tag."
              exit 1
            fi
          fi
          echo "Found CLI tag: $CLI_VERSION_TAG"
          echo "PKG_VER=${CLI_VERSION_TAG#v}" >> $GITHUB_ENV
          echo "CLI_TAG_REF=${CLI_VERSION_TAG}" >> $GITHUB_ENV

      - name: Checkout CLI repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.CLI_TAG_REF }}
          path: cli

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install build dependencies
        run: |
          sudo add-apt-repository ppa:pipewire-debian/pipewire-upstream -y
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential pkg-config libglib2.0-dev libssl-dev libpq-dev libssh2-1-dev \
            libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavfilter-dev libavdevice-dev libswresample-dev \
            libwayland-dev libxkbcommon-dev libpipewire-0.3-dev libdbus-1-dev libspa-0.2-dev \
            libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
            libx11-dev libasound2-dev libfuse2 wget jq bsdmainutils

      - name: Download and Extract Latest Core Binaries
        run: |
          mkdir core-binaries release_assets
          CORE_API_URL="https://api.github.com/repos/Wayclip/core/releases/latest"
          CORE_RELEASE_DATA=$(curl -s "$CORE_API_URL")
          CORE_TAG=$(echo "$CORE_RELEASE_DATA" | jq -r '.tag_name')
          CORE_ASSET_URL=$(echo "$CORE_RELEASE_DATA" | jq -r --arg ver "$CORE_TAG" '.assets[] | select(.name == "wayclip-\($ver)-x86_64-unknown-linux-gnu.tar.gz") | .browser_download_url')

          echo "Downloading core binaries version ${CORE_TAG} from ${CORE_ASSET_URL}"
          wget -q -O core-binaries.tar.gz "${CORE_ASSET_URL}"
          tar -xzf core-binaries.tar.gz -C core-binaries

      - name: Build the CLI binary
        run: cd cli && cargo build --release

      - name: Prepare Release Assets
        run: |
          cp cli/target/release/wayclip-cli release_assets/wayclip-cli-x86_64-unknown-linux-gnu
          cp cli/assets/wayclip-daemon.service release_assets/

      - name: Build AppImage
        run: |
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/lib/systemd/user
          cp release_assets/wayclip-cli-x86_64-unknown-linux-gnu AppDir/usr/bin/wayclip-cli
          cp core-binaries/wayclip-binaries/daemon AppDir/usr/bin/wayclip-daemon
          cp core-binaries/wayclip-binaries/trigger AppDir/usr/bin/wayclip-trigger
          cp cli/assets/wayclip-cli.desktop AppDir/
          cp cli/assets/wayclip-cli.png AppDir/
          cp release_assets/wayclip-daemon.service AppDir/usr/lib/systemd/user/
          sed -i 's|ExecStart=.*|ExecStart=%h/.local/bin/wayclip-daemon|' AppDir/usr/lib/systemd/user/wayclip-daemon.service
          chmod +x AppDir/usr/bin/*
          wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ./appimagetool-x86_64.AppImage AppDir
          mv Wayclip_CLI-x86_64.AppImage release_assets/wayclip-cli-${{ env.PKG_VER }}-x86_64.AppImage

      - name: Generate correct PKGBUILD for AUR
        run: |
          cat <<PKG > release_assets/PKGBUILD
          # Maintainer: konyogony <dev@wayclip.com>
          pkgname=wayclip-cli
          pkgver=${{ env.PKG_VER }}
          pkgrel=1
          pkgdesc="The CLI interface for Wayclip, an instant replay tool built for the Linux community."
          arch=('x86_64')
          url="https://github.com/Wayclip/cli"
          license=('MIT')
          depends=('pipewire' 'wayland' 'alsa-lib' 'ffmpeg' 'gstreamer' 'gst-plugins-base' 'dbus' 'libxcb' 'jq')
          makedepends=('rust' 'cargo' 'curl')
          source=("\$pkgname-\$pkgver.tar.gz::https://github.com/Wayclip/cli/archive/refs/tags/v\$pkgver.tar.gz")
          sha256sums=('SKIP')

          prepare() {
            cd "\$srcdir"
            echo "Fetching the latest core release information from GitHub..."
            
            local core_api_url="https://api.github.com/repos/Wayclip/core/releases/latest"
            local core_release_data=\$(curl -s "\$core_api_url")
            _core_ver=\$(echo "\$core_release_data" | jq -r '.tag_name')
            
            local asset_name="wayclip-\$_core_ver-x86_64-unknown-linux-gnu.tar.gz"
            local core_download_url=\$(echo "\$core_release_data" | jq -r --arg name "\$asset_name" '.assets[] | select(.name == \$name) | .browser_download_url')

            if [ -z "\$_core_ver" ] || [ "\$_core_ver" == "null" ] || [ -z "\$core_download_url" ] || [ "\$core_download_url" == "null" ]; then
              echo "::error::Could not determine the latest core release tag or download URL."
              exit 1
            fi
            
            echo "Downloading core binaries version \${_core_ver} from \${core_download_url}..."
            curl -L -o "wayclip-core-binaries.tar.gz" "\$core_download_url"
            
            tar -xzf "wayclip-core-binaries.tar.gz"
          }

          build() {
            cd "\$srcdir/cli-\$pkgver"
            cargo build --release
          }

          package() {
            install -Dm755 "\$srcdir/cli-\$pkgver/target/release/wayclip-cli" "\$pkgdir/usr/bin/wayclip-cli"
            install -Dm755 "\$srcdir/wayclip-binaries/daemon" "\$pkgdir/usr/bin/wayclip-daemon"
            install -Dm755 "\$srcdir/wayclip-binaries/trigger" "\$pkgdir/usr/bin/wayclip-trigger"
            if [ -f "\$srcdir/cli-\$pkgver/assets/wayclip-daemon.service" ]; then
              sed -i 's|ExecStart=.*|ExecStart=/usr/bin/wayclip-daemon|' "\$srcdir/cli-\$pkgver/assets/wayclip-daemon.service"
              install -Dm644 "\$srcdir/cli-\$pkgver/assets/wayclip-daemon.service" "\$pkgdir/usr/lib/systemd/user/wayclip-daemon.service"
            fi
          }
          PKG

      - name: Upload common assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: release_assets/

  build-deb:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: release_assets

      - name: Install Debian Packaging Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y devscripts build-essential debhelper curl jq \
            libgstreamer1.0-0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-vaapi gstreamer1.0-libav

      - name: Download and Extract Latest Core Binaries
        run: |
          mkdir core-binaries
          CORE_API_URL="https://api.github.com/repos/Wayclip/core/releases/latest"
          CORE_RELEASE_DATA=$(curl -s "$CORE_API_URL")
          CORE_TAG=$(echo "$CORE_RELEASE_DATA" | jq -r '.tag_name')
          CORE_ASSET_URL=$(echo "$CORE_RELEASE_DATA" | jq -r --arg ver "$CORE_TAG" '.assets[] | select(.name == "wayclip-\($ver)-x86_64-unknown-linux-gnu.tar.gz") | .browser_download_url')
          if [ -z "$CORE_ASSET_URL" ] || [ "$CORE_ASSET_URL" == "null" ]; then
            echo "::error::Could not find latest core binaries to download from Wayclip/core."
            exit 1
          fi
          echo "Downloading core binaries version ${CORE_TAG} from ${CORE_ASSET_URL}"
          curl -L -o core-binaries.tar.gz "${CORE_ASSET_URL}"
          tar -xzf core-binaries.tar.gz -C core-binaries

      - name: Prepare Debian Packaging Directory
        run: |
          PKG_VER=${{ needs.build.outputs.pkg_ver }}
          DEB_DIR="deb_build/wayclip-cli-${PKG_VER}"
          mkdir -p "${DEB_DIR}/debian"
          mkdir -p "${DEB_DIR}/usr/bin"
          mkdir -p "${DEB_DIR}/usr/lib/systemd/user"

          cp release_assets/wayclip-cli-x86_64-unknown-linux-gnu "${DEB_DIR}/usr/bin/wayclip-cli"
          cp core-binaries/wayclip-binaries/daemon "${DEB_DIR}/usr/bin/wayclip-daemon"
          cp core-binaries/wayclip-binaries/trigger "${DEB_DIR}/usr/bin/wayclip-trigger"
          cp release_assets/wayclip-daemon.service "${DEB_DIR}/usr/lib/systemd/user/"

          sed -i 's|ExecStart=.*|ExecStart=/usr/bin/wayclip-daemon|' "${DEB_DIR}/usr/lib/systemd/user/wayclip-daemon.service"
          chmod +x "${DEB_DIR}/usr/bin/"*

      - name: Create debian/install file
        run: |
          PKG_VER=${{ needs.build.outputs.pkg_ver }}
          DEB_DIR="deb_build/wayclip-cli-${PKG_VER}"
          cat <<EOF > "${DEB_DIR}/debian/install"
          usr/bin/wayclip-cli /usr/bin
          usr/bin/wayclip-daemon /usr/bin
          usr/bin/wayclip-trigger /usr/bin
          usr/lib/systemd/user/wayclip-daemon.service /usr/lib/systemd/user
          EOF

      - name: Create debian/control file
        run: |
          PKG_VER=${{ needs.build.outputs.pkg_ver }}
          cat <<EOF > deb_build/wayclip-cli-${PKG_VER}/debian/control
          Source: wayclip-cli
          Section: utils
          Priority: optional
          Maintainer: konyogony <dev@wayclip.com>
          Build-Depends: debhelper-compat (= 13)
          Standards-Version: 4.6.2

          Package: wayclip-cli
          Architecture: amd64
          Depends: \${shlibs:Depends}, \${misc:Depends}, pipewire, gstreamer1.0-plugins-base, gstreamer1.0-plugins-good, gstreamer1.0-plugins-bad, gstreamer1.0-plugins-ugly, gstreamer1.0-vaapi, gstreamer1.0-libav, libglib2.0-0, libssl3, libpq5, libssh2-1, libwayland-client0, libxkbcommon0, libdbus-1-3, libunwind8, libgstreamer1.0-0, libx11-6, libasound2, fuse
          Description: The CLI interface for Wayclip
           An instant replay tool built for the Linux community. Wayclip allows
           you to capture and save the last moments of your screen activity.
          EOF

      - name: Create debian/changelog and debian/rules
        run: |
          PKG_VER=${{ needs.build.outputs.pkg_ver }}
          cd deb_build/wayclip-cli-${PKG_VER}
          export DEBEMAIL="dev@wayclip.com"
          export DEBFULLNAME="Wayclip CI"
          dch --create -v ${PKG_VER}-1 --package wayclip-cli --distribution stable "New release v${PKG_VER}."
          cat <<EOF > debian/rules
          #!/usr/bin/make -f
          %:
          	dh \$@
          EOF
          chmod +x debian/rules

      - name: Build the .deb package
        run: |
          PKG_VER=${{ needs.build.outputs.pkg_ver }}
          cd deb_build/wayclip-cli-${PKG_VER}/
          dpkg-buildpackage -us -uc -b

      - name: Upload debian package artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb-package
          path: deb_build/*.deb

  publish-aur:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: release-assets
      - name: Publish to AUR
        uses: KSXGitHub/github-actions-deploy-aur@v4.1.1
        with:
          pkgbuild: ./PKGBUILD
          pkgname: wayclip-cli
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Update to v${{ needs.build.outputs.pkg_ver }}"

  publish-release:
    runs-on: ubuntu-22.04
    needs: [build, build-deb]
    if: github.event_name == 'push'
    permissions:
      contents: write
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: final-assets
      - name: Display release contents
        run: ls -lR final-assets
      - name: Upload All Assets to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            final-assets/release-assets/wayclip-cli-*-x86_64.AppImage
            final-assets/release-assets/wayclip-cli-x86_64-unknown-linux-gnu
            final-assets/release-assets/wayclip-daemon.service
            final-assets/deb-package/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
